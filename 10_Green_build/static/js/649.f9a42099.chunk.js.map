{"version":3,"file":"static/js/649.f9a42099.chunk.js","mappings":"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","sources":["components/GraphWidget.js"],"sourcesContent":["//Graph that is displayed underneath the map.\r\nimport React from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  CartesianGrid,\r\n  BarChart,\r\n  Bar,\r\n  Cell,\r\n} from \"recharts\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./styles/GraphWidget.css\";\r\nimport { Title_Formatter } from \"./Title_Formatter\";\r\nimport { ScaleFormatter } from \"../components/ScaleFormatter\";\r\nimport * as d3 from \"d3\";\r\n\r\nconst styles = {\r\n  fontFamily: \"sans-serif\",\r\n  textAlign: \"center\",\r\n  textDecoration: \"none\",\r\n};\r\nconst mobileStyles = {\r\n  fontFamily: \"sans-serif\",\r\n  textAlign: \"center\",\r\n  textDecoration: \"none\",\r\n  position: \"relative\",\r\n  right: \"1rem\",\r\n};\r\nconst isMobile = window.innerWidth > 500;\r\n\r\n//Code that enables a tooltip on hover and determines what is displayed. \r\nconst CustomTooltip = ({ active, payload, label }) => {\r\n  if (active && payload && payload.length) {\r\n    return (\r\n      <div>\r\n        <p>{` (${payload[0].payload.year}) - ${payload[0].value} `}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport const GraphWidget = ({ data, max }) => {\r\n  // let currentID = useSelector((state) => state.id);\r\n  // let dataMap = DataFilter(data, year, currentID);\r\n  const county = useSelector((state) => state.county);\r\n  const current_measure = useSelector((state) => state.current_measure);\r\n  const reduxYear = useSelector((state) => state.title_year);\r\n\r\n  let maximum = ScaleFormatter(current_measure);\r\n\r\n  //Uses d3's color interpolation to determine color picked (same process as the map so the colors will match)\r\n  let colorScale = d3\r\n    .scaleSequential(d3.interpolateRdYlGn)\r\n    .domain([0, maximum]);\r\n  if (current_measure !== \"10green\") {\r\n    colorScale = d3.scaleSequential(d3.interpolateYlGnBu).domain([0, maximum]);\r\n  }\r\n\r\n  return (\r\n    <div id=\"graphwidget\">\r\n      <div style={isMobile ? styles : mobileStyles}>\r\n        <ResponsiveContainer\r\n          width={isMobile ? \"82.5%\" : \"110%\"}\r\n          height={200}\r\n          zoom={0.8}\r\n        >\r\n          <BarChart\r\n            width={600}\r\n            height={300}\r\n            data={data}\r\n            margin={{\r\n              top: 50,\r\n              right: 30,\r\n              left: 0,\r\n              bottom: 0,\r\n            }}\r\n          >\r\n            <text\r\n              class=\"second\"\r\n              x={300}\r\n              y={20}\r\n              fill=\"black\"\r\n              textAnchor=\"middle\"\r\n              dominantBaseline=\"central\"\r\n              cursor=\"auto\"\r\n              text-decoration=\"none\"\r\n            >\r\n              <tspan fontSize=\"16\" style={{ textDecoration: \"none\" }}>\r\n                {county} - {Title_Formatter(current_measure)} Score Over Time -\r\n              </tspan>{\" \"}\r\n              <a\r\n                href=\"https://aqs.epa.gov/aqsweb/airdata/download_files.html#Annual\"\r\n                class=\"sourcebtn\"\r\n              >\r\n                Source: EPA Annual Air Data\r\n              </a>\r\n            </text>\r\n\r\n            <XAxis\r\n              dataKey=\"year\"\r\n              type={\"category\"}\r\n              interval={window.innerWidth > 460 ? 4 : 5}\r\n              minTickGap={5}\r\n              tickLine={true}\r\n              domain={[\"dataMin\", \"dataMax\"]}\r\n            />\r\n            <YAxis type=\"number\" domain={[0, max]} \r\n            tickCount={10}\r\n            \r\n            interval={0}\r\n            \r\n            />\r\n            <Tooltip\r\n              wrapperStyle={{ outline: \"none\" }}\r\n              content={<CustomTooltip />}\r\n            />\r\n            <Bar dataKey=\"value\">\r\n              {data.map((entry, index) => (\r\n                //Dynamically recolors individual cells and adds \r\n                <Cell\r\n                  key={`cell-${index}`}\r\n                  fill={colorScale(entry.value - maximum / 10.0)}\r\n                  stroke=\"#000000\"\r\n                  strokeWidth={entry.year === parseInt(reduxYear) ? 2 : 0}\r\n                />\r\n\r\n              ))}\r\n\r\n              \r\n            </Bar>\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GraphWidget;\r\n"],"names":["styles","fontFamily","textAlign","textDecoration","mobileStyles","position","right","isMobile","window","innerWidth","CustomTooltip","_ref","active","payload","label","length","_jsx","children","concat","year","value","GraphWidget","_ref2","data","max","county","useSelector","state","current_measure","reduxYear","title_year","maximum","ScaleFormatter","colorScale","d3","domain","id","style","ResponsiveContainer","width","height","zoom","_jsxs","BarChart","margin","top","left","bottom","class","x","y","fill","textAnchor","dominantBaseline","cursor","fontSize","Title_Formatter","href","XAxis","dataKey","type","interval","minTickGap","tickLine","YAxis","tickCount","Tooltip","wrapperStyle","outline","content","Bar","map","entry","index","Cell","stroke","strokeWidth","parseInt"],"sourceRoot":""}